@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  user-select: none;
  cursor: none !important;
}

body {
  background-color: #000000;
}

.album-shadow {
  box-shadow: 0px 40px 250px rgba(0, 0, 0, 0.25);
}

.scroll-container {
  scrollbar-width: none;
}

.scroll-container::-webkit-scrollbar {
  display: none;
}

.scrollbar-hide {
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

.fade-out {
  opacity: 0;
}

.fade-in {
  -webkit-transition: background-color 1000ms linear;
  -ms-transition: background-color 1000ms linear;
  transition: background-color 1000ms linear;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.fadeIn-animation {
  animation: 0.8s fadeIn;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

@keyframes marquee {

  0%,
  2.5% {
    transform: translateX(0);
  }

  47.5%,
  52.5% {
    transform: translateX(var(--final-position));
  }

  97.5%,
  100% {
    transform: translateX(0);
  }
}

section {
  display: flex;
  padding-top: 8px;
}

@keyframes waveform {
  0% {
    transform: scaleY(0.5);
  }

  50% {
    transform: scaleY(2);
  }

  100% {
    transform: scaleY(0.5);
  }
}

[class*="wave"] {
  width: 2.5px;
  height: 16px;
  margin-right: 3px;
  animation: waveform var(--wavefreq) ease-in-out infinite forwards;
  animation-delay: var(--wave-offset);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 15px;
}

[class*="wave"]:last-child {
  margin-right: 0;
}

:root {
  --m: 11.5;
  --wavefreq: calc(100ms * var(--m));
  --wave-offset: -1.5s;
}

.wave0 {
  --wavefreq: calc(100ms * var(--m));
  animation-delay: var(--wave-offset);
}

.wave1 {
  --wavefreq: calc(200ms * var(--m));
  animation-delay: calc(var(--wave-offset) - 0.2s);
}

.wave2 {
  --wavefreq: calc(300ms * var(--m));
  animation-delay: calc(var(--wave-offset) - 0.3s);
}

.wave3 {
  --wavefreq: calc(400ms * var(--m));
  animation-delay: calc(var(--wave-offset) - 0.4s);
}

.text-[40px].font-[580].tracking-tight.transition-colors {
  transition: color 0.3s ease-in-out;
  will-change: color;
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

.flex-1.text-left.overflow-y-auto {
  scroll-behavior: smooth;
  scrollbar-width: none;
  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
  transform: translateZ(0);
  will-change: scroll-position;
  -webkit-overflow-scrolling: touch;
}

.flex-1.text-left.overflow-y-auto::-webkit-scrollbar {
  display: none;
}

.flex-1.text-left.overflow-y-auto::-webkit-scrollbar-track {
  display: none;
}

.flex-1.text-left.overflow-y-auto::-webkit-scrollbar-thumb {
  display: none;
}

@keyframes fadeInLyric {
  from {
    opacity: 0;
    transform: translateY(10px) translateZ(0);
  }

  to {
    opacity: 1;
    transform: translateY(0) translateZ(0);
  }
}

.current-lyric-animation {
  animation: fadeInLyric 0.3s ease-out forwards;
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

.flex-1.text-left.overflow-y-auto p {
  margin-bottom: 16px;
}

.progress-bar {
  transition-property: width;
  transition-timing-function: linear;
  transition-duration: 250ms;
  will-change: width;
}

.progress-bar.no-transition {
  transition: none;
}

.translate-y-24 {
  transform: translateY(6rem);
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: ease-linear;
  transition-duration: 0ms;
  will-change: transform;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
}

@keyframes volumeInScale {
  from {
    transform: scale(0) translateX(100%);
    margin-right: 0;
  }

  to {
    transform: scale(1) translateX(0);
    margin-right: 60px;
  }
}

.volumeInScale {
  animation-name: volumeInScale;
  animation-duration: 0.3s;
  animation-fill-mode: forwards;
}

@keyframes volumeOutScale {
  from {
    transform: scale(1) translateX(0);
    margin-right: 60px;
  }

  to {
    transform: scale(0) translateX(100%);
    margin-right: 0;
  }
}

.volumeOutScale {
  animation-name: volumeOutScale;
  animation-duration: 0.3s;
  animation-fill-mode: forwards;
}

.transition-height {
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@keyframes mappingOverlayEnter {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes mappingOverlayExit {
  from {
    transform: translateY(0);
    opacity: 1;
  }

  to {
    transform: translateY(-20px);
    opacity: 0;
  }
}

.mapping-overlay-enter {
  animation: mappingOverlayEnter 300ms ease forwards;
  display: flex;
}

.mapping-overlay-exit {
  animation: mappingOverlayExit 300ms ease forwards;
  display: flex;
}

.volumeInScale,
.volumeOutScale {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transform-origin: center;
}

.simple-keyboard {
  background-color: #1A1A1A !important;
  border-radius: 12px !important;
  border: 1px solid rgba(255, 255, 255, 0.1) !important;
  padding: 12px !important;
  max-height: 280px !important;
}

.simple-keyboard .hg-button {
  background-color: rgba(255, 255, 255, 0.1) !important;
  border: 1px solid rgba(255, 255, 255, 0.1) !important;
  color: white !important;
  border-radius: 6px !important;
  font-family: var(--font-inter), var(--font-noto-sans-sc), var(--font-noto-sans-tc), var(--font-noto-serif-jp), var(--font-noto-sans-kr), var(--font-noto-naskh-ar), var(--font-noto-sans-bn), var(--font-noto-sans-dv), var(--font-noto-sans-he), var(--font-noto-sans-ta), var(--font-noto-sans-th), var(--font-noto-sans-gk), var(--font-noto-color-emoji), system-ui, sans-serif !important;
  font-optical-sizing: auto !important;
  font-size: 18px !important;
  font-weight: 500 !important;
  height: 42px !important;
  min-width: 32px !important;
  margin: 3px !important;
  padding: 0 6px !important;
  transition: all 0.2s ease !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  text-align: center !important;
  line-height: 1 !important;
  vertical-align: middle !important;
}

.simple-keyboard .hg-button:hover {
  background-color: rgba(255, 255, 255, 0.2) !important;
  border-color: rgba(255, 255, 255, 0.2) !important;
}

.simple-keyboard .hg-button:active {
  background-color: rgba(255, 255, 255, 0.3) !important;
  transform: scale(0.95) !important;
}

.simple-keyboard .hg-red {
  background-color: rgba(239, 68, 68, 0.2) !important;
  border-color: rgba(239, 68, 68, 0.3) !important;
}

.simple-keyboard .hg-red:hover {
  background-color: rgba(239, 68, 68, 0.3) !important;
  border-color: rgba(239, 68, 68, 0.4) !important;
}

.simple-keyboard .hg-green {
  background-color: rgba(34, 197, 94, 0.2) !important;
  border-color: rgba(34, 197, 94, 0.3) !important;
}

.simple-keyboard .hg-green:hover {
  background-color: rgba(34, 197, 94, 0.3) !important;
  border-color: rgba(34, 197, 94, 0.4) !important;
}

.simple-keyboard .hg-highlight {
  background-color: rgba(59, 130, 246, 0.3) !important;
  border-color: rgba(59, 130, 246, 0.4) !important;
}

.simple-keyboard .hg-highlight:hover {
  background-color: rgba(59, 130, 246, 0.4) !important;
  border-color: rgba(59, 130, 246, 0.5) !important;
}

.simple-keyboard .hg-button.hg-activeButton {
  background-color: rgba(255, 255, 255, 0.25) !important;
  border-color: rgba(255, 255, 255, 0.3) !important;
}

.simple-keyboard .hg-button.hg-button-space {
  min-width: 450px !important;
}

.simple-keyboard .hg-button.hg-button-shift {
  min-width: 70px !important;
}

.simple-keyboard .hg-button.hg-button-enter {
  min-width: 70px !important;
}

.simple-keyboard .hg-button.hg-button-bksp {
  min-width: 70px !important;
}

.simple-keyboard .hg-button.hg-button-lock {
  min-width: 60px !important;
}

.simple-keyboard .hg-button.hg-button-numbers {
  min-width: 70px !important;
  max-width: 70px !important;
}

.simple-keyboard .hg-button.hg-button-symbols {
  min-width: 70px !important;
  max-width: 70px !important;
}

.simple-keyboard .hg-button.hg-button-default {
  min-width: 70px !important;
  max-width: 70px !important;
}